worker_processes  auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/lib/lua/?.lua;;";

  log_format webhook '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent '
                     '"$http_user_agent" "$request_time"';

  access_log /var/log/nginx/access.log webhook;

  # map header for jenkins target selection - replace host:port with your jenkins hosts
  map $http_x_jenkins_target $jenkins_backend {
    default "10.10.1.30:8080";  # REPLACE_ME_JENKINS1_HOST:PORT
    "team2" "10.10.1.31:8080";   # REPLACE_ME_JENKINS2_HOST:PORT
  }

  # rate limiting
  limit_req_zone $binary_remote_addr zone=webhook_zone:10m rate=10r/s;

  server {
    listen 443 ssl;
    server_name webhooks.example.com; # REPLACE with your DNS

    ssl_certificate /etc/tls/tls.crt;
    ssl_certificate_key /etc/tls/tls.key;

    # include dynamically-generated allowlist (created by CronJob)
    include /etc/nginx/allowlist.conf;

    # SonarQube
    location = /sonarqube {
      limit_req zone=webhook_zone burst=20 nodelay;
      access_by_lua_file /etc/nginx/lua/validate_hmac.lua;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_pass http://10.10.1.10:9000/api/webhooks/execute; # REPLACE_ME_SONAR_HOST:PORT
    }

    # Artifactory
    location = /artifactory {
      limit_req zone=webhook_zone burst=20 nodelay;
      access_by_lua_file /etc/nginx/lua/validate_hmac.lua;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_pass http://10.10.1.20:8081/webhook/; # REPLACE_ME_ARTIFACTORY_HOST:PORT
    }

    # Jenkins (dynamic via header X-Jenkins-Target)
    location /jenkins {
      limit_req zone=webhook_zone burst=20 nodelay;
      access_by_lua_file /etc/nginx/lua/validate_hmac.lua;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_pass http://$jenkins_backend/github-webhook/;
    }

    # health probe
    location = /healthz {
      return 200 "OK";
    }
  }
}
